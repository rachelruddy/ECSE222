|rachel_ruddy_wrapper
enable => rachel_ruddy_clock_divider:i1.enable
reset => rachel_ruddy_clock_divider:i1.reset
reset => rachel_ruddy_counter:i2.reset
clk => rachel_ruddy_clock_divider:i1.clk
clk => rachel_ruddy_counter:i2.clk
HEX0[0] << seven_segment_decoder:i3.segments_out[0]
HEX0[1] << seven_segment_decoder:i3.segments_out[1]
HEX0[2] << seven_segment_decoder:i3.segments_out[2]
HEX0[3] << seven_segment_decoder:i3.segments_out[3]
HEX0[4] << seven_segment_decoder:i3.segments_out[4]
HEX0[5] << seven_segment_decoder:i3.segments_out[5]
HEX0[6] << seven_segment_decoder:i3.segments_out[6]


|rachel_ruddy_wrapper|rachel_ruddy_clock_divider:i1
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => en_out_internal.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => en_out_internal.ENA
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => en_out_internal.OUTPUTSELECT
reset => en_out_internal.ACLR
reset => counter[0].PRESET
reset => counter[1].PRESET
reset => counter[2].PRESET
reset => counter[3].PRESET
reset => counter[4].PRESET
reset => counter[5].PRESET
reset => counter[6].PRESET
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
reset => counter[11].ACLR
reset => counter[12].PRESET
reset => counter[13].PRESET
reset => counter[14].PRESET
reset => counter[15].PRESET
reset => counter[16].ACLR
reset => counter[17].PRESET
reset => counter[18].ACLR
reset => counter[19].PRESET
reset => counter[20].PRESET
reset => counter[21].PRESET
reset => counter[22].PRESET
reset => counter[23].PRESET
reset => counter[24].ACLR
reset => counter[25].PRESET
reset => counter[26].ACLR
reset => counter[27].ACLR
reset => counter[28].ACLR
reset => counter[29].ACLR
reset => counter[30].ACLR
reset => counter[31].ACLR
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
clk => en_out_internal.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
clk => counter[24].CLK
clk => counter[25].CLK
clk => counter[26].CLK
clk => counter[27].CLK
clk => counter[28].CLK
clk => counter[29].CLK
clk => counter[30].CLK
clk => counter[31].CLK
en_out <= en_out_internal.DB_MAX_OUTPUT_PORT_TYPE


|rachel_ruddy_wrapper|rachel_ruddy_counter:i2
enable => count_reg[0].ENA
enable => count_reg[2].ENA
enable => count_reg[1].ENA
reset => count_reg[0].ACLR
reset => count_reg[1].ACLR
reset => count_reg[2].ACLR
clk => count_reg[0].CLK
clk => count_reg[1].CLK
clk => count_reg[2].CLK
count[0] <= count_reg[0].DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count_reg[1].DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count_reg[2].DB_MAX_OUTPUT_PORT_TYPE


|rachel_ruddy_wrapper|seven_segment_decoder:i3
code[0] => Mux0.IN19
code[0] => Mux1.IN19
code[0] => Mux2.IN19
code[0] => Mux3.IN19
code[0] => Mux4.IN19
code[0] => Mux5.IN19
code[0] => Mux6.IN19
code[1] => Mux0.IN18
code[1] => Mux1.IN18
code[1] => Mux2.IN18
code[1] => Mux3.IN18
code[1] => Mux4.IN18
code[1] => Mux5.IN18
code[1] => Mux6.IN18
code[2] => Mux0.IN17
code[2] => Mux1.IN17
code[2] => Mux2.IN17
code[2] => Mux3.IN17
code[2] => Mux4.IN17
code[2] => Mux5.IN17
code[2] => Mux6.IN17
code[3] => Mux0.IN16
code[3] => Mux1.IN16
code[3] => Mux2.IN16
code[3] => Mux3.IN16
code[3] => Mux4.IN16
code[3] => Mux5.IN16
code[3] => Mux6.IN16
segments_out[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


